@import "constants";
@import (less) "../../vendor/modern-reset/reset.css";

@supports(--property: "value") {
	:root {
		   --bgcolor-light: @bg_color_light;
		   --fgcolor-light: @text_color_light;
		--code-color-light: @code_color_light;
	  --bgcolornav-light: @bg_color_navbar_light;

		    --bgcolor-dark: @bg_color_dark;
		    --fgcolor-dark: @text_color_dark;
		 --code-color-dark: @code_color_dark;
		 --bgcolornav-dark: @bg_color_navbar_dark;
	
		         --bgcolor: var(--bgcolor-light);
		         --fgcolor: var(--fgcolor-light);
		       --codecolor: var(--code-color-light);
		           --bgnav: var(--bgcolornav-light);
	}
} // @supports

@media (prefers-color-scheme: dark) {
	:root {
		  --bgcolor: var(--bgcolor-dark);
		  --fgcolor: var(--fgcolor-dark);
		--codecolor: var(--codecolor-dark);
		    --bgnav: var(--bgcolornav-dark);
	}
	
	article h1 { color: var(--fgcolor-dark); }
	pre:not([class]) { color: var(--code-color-dark); }
}

:root {
	font-size: 120%;

	color-scheme: light dark;
}

body {
	font-size: 1em;
	font-family: "Avenir Next", Helvetica, sans-serif;
	
	padding-right: 1em;
	padding-left: 1em;
	
	background: @bg_color_light;
	background: var(--bgcolor);

	color: @text_color_light;
	color: var(--fgcolor);
	
	background-image: url(/images/greystate_logo.png);
	background-size: 20vw;
	background-repeat: no-repeat;
	background-position: 1rem 6rem;
	background-attachment: fixed;
	background-blend-mode: multiply;
}

@supports(--property: "value") {

	body {
		background-image:
			url(/images/greystate_logo.png),
			linear-gradient(var(--bgnav, rgba(0, 0, 200, 0.1)), var(--bgnav, rgba(0, 0, 200, 0.1)));
		background-size:
			20vw auto,
			23vw 32px;
		background-repeat: no-repeat, repeat-y;
		background-position: 1rem 6rem, left center;
		background-attachment: fixed;
		background-blend-mode: multiply, normal;
	}

} // @supports

h1 {
	background-color: rgba(100, 0, 0, 0.3);
	box-shadow: -100px 0 0 10px rgba(100, 0, 0, 0.3);
	padding-right: 10px;
	color: #000;
	font-weight: 600;
	font-size: 1.7rem;
	border-right: 10px solid;
	
	+ .date {
		text-align: right;
	}
}

h2 {
	font-size: 1.2rem;
	
	+ * {
		margin-top: 0;
	}
}

article {
	margin: 2em auto 3rem;
	max-width: 75ch;

	pre[class*=language-],
	blockquote {
		margin-top: 3em;
		margin-bottom: 2em;
	}

	pre[class*=language-] {
		&, code[class*="language-"] { font-size: 0.8rem; }
	}
	
	figure {
		border: 2px solid rgba(0, 0, 0, 0.3);
		border-bottom: 0;
	}
	
	figcaption {
		text-align: center;
		font-size: 0.9rem;
		padding-top: 0.1em;
		padding-bottom: 0.1em;
		background: rgba(0, 0, 0, 0.3);
	}
	
	blockquote {
		margin-top: 2rem;
		position: relative;
		font-style: italic;
		background: #000;
		color: #fff;
		padding: 1rem 1rem 1rem 3rem;
		border-left: 6px solid #999;
		
		&::before, &::after {
			font-style: normal;
			font-size: 3rem;
			line-height: 1;
			height: 1rem;
			opacity: 0.5;
			position: absolute;
		}
		
		&::before {
			content: open-quote;
			left: 1rem;
			top: 0.1rem;
		}

		&::after {
			content: close-quote;
			right: 1.3rem;
			bottom: 0.4rem;
		}
	}
	
	// This is for when Prism hasn't kicked in (i.e. probably no JS)
	pre:not([class]) {
		background: rgba(0, 0, 0, 0.5);
		padding: 1rem;
		overflow-x: auto;
		color: #000;
		color: var(--codecolor);
	}
}


.navbar {
	position: relative;
	min-height: 100vh;
	width: 23vw;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 1;
	
	.links {
		margin-top: 40vh;
		margin-left: 1em;
		
		a {
			padding: 0.3em 0.8em;
			display: inline-block;
			background: #000;
			color: #fff;
		}
		
		li + li > a {
			margin-top: 0.2em;
		}
		
		.archives {
			margin-top: 0.2em;
			margin-left: 0.5em;
			
			a {
				background: #211;
			}
		}
	}
}

// This is for browsers that can handle CSS Grid
@supports (display: grid) {

	body when (@enable_grid = true) {
		// Remove the safety padding
		padding-right: 0;
		padding-left: 0;
	}
	
	article when (@enable_grid = true) {
		max-width: unset;
		
		display: grid;
		grid-template-columns: 3fr [wide-start] 1fr [code-start] 2fr [content-start] 1fr 2fr 3fr 2fr 1fr 3fr [content-end] 2fr [wide-end code-end] 3fr;

		> * { grid-column: content; }
		> p { max-width: 75ch; }
		> pre[class*=language-] { grid-column: code; }
		> blockquote { grid-column: 4 / 9; }
		
	}
}
